@page "/create-community"
@using Data.Database.Table
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigate

<MudContainer MaxWidth="MaxWidth.Medium" Class="d-flex justify-center align-center flex-column py-8">
    <MudPaper Elevation="3" Class="pa-8">
        <MudText Typo="Typo.h4" Class="mb-6">Add topics</MudText>
        <MudText Typo="Typo.body1" Class="mb-8">
            Add up to 3 topics to help interested redditors find your community.
        </MudText>

        <!-- Thanh tìm kiếm -->
        <MudTextField @bind-Value="Search"
                      Placeholder="Filter topics"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      AdornmentColor="Color.Secondary"
                      Class="rounded-input">
        </MudTextField>

        <!-- Tiêu đề -->
        <MudText Typo="Typo.h6" Class="mt-4">Topics 0/3</MudText>

        @if (topics == null)
        {
            <p><em>Loading...</em></p>
        }
        else if (topics.Count == 0)
        {
            <p>No topics found.</p>
        }
        else
        {
            <MudList T="Topic"> @* Chỉ định loại cho MudList *@
                @foreach (var topic in topics)
                {
                    <MudListItem>
                        <MudCheckbox 
                            Checked="@selectedTopics.Contains(topic)" 
                            OnChange="(checked) => ToggleTopicSelection(topic, checked)" /> 
                        @topic.TopicName
                    </MudListItem>
                }
            </MudList>
        }

        <!-- Hiển thị các chủ đề đã chọn -->
        <MudText Typo="Typo.h6" Class="mt-4">Selected Topics:</MudText>
        <ul>
            @if (selectedTopics.Count == 0)
            {
                <li><em>No topics selected.</em></li>
            }
            else
            {
                @foreach (var selectedTopic in selectedTopics)
                {
                    <li>@selectedTopic.TopicName</li> <!-- Hiển thị tên chủ đề đã chọn -->
                }
            }
        </ul>

    </MudPaper>
</MudContainer>

<style>
    .rounded-input {
        border-radius: 12px; /* Thay đổi giá trị này theo ý muốn */
    }
</style>

@code {
    public string Search { get; set; }
    private List<Topic> topics;
    private List<Topic> selectedTopics = new List<Topic>();

    protected override async Task OnInitializedAsync()
    {
        topics = await DbContext.Topics.ToListAsync();
    }

    private void ToggleTopicSelection(Topic topic, bool isChecked)
    {
        if (isChecked)
        {
            if (selectedTopics.Count < 3) // Giới hạn tối đa là 3 chủ đề
            {
                selectedTopics.Add(topic);
            }
        }
        else
        {
            selectedTopics.Remove(topic);
        }
    }
}
