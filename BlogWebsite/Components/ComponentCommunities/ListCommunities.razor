@page "/communities"
@using Data.Database.Table
@using Newtonsoft.Json
@using Data.DTO.EntitiDTO
@using Data.DTO
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject IHttpClientFactory HttpClientFactory

<h3>Danh sách các cộng đồng</h3>
<MudGrid>
	@if (listGroup != null && listGroup.Count > 0)
	{
		foreach (var group in listGroup)
		{
			var href = $"/groups/{Uri.EscapeDataString(group.Name)}";
			var imgSrc = string.IsNullOrEmpty(group.ImgCover) ? "/img/icon.jpg" : group.ImgCover;
			<MudItem xs="3">
				<div class="d-flex align-items-center justify-content-start">
					<MudItem Style="padding-left: 32px; display: flex; align-items: center;">
						<img src="@imgSrc" alt="Community Icon" style="width:50px; height:50px; border-radius:50%;" />
					</MudItem>
					<MudItem xs="10">
						<a href="@href" style="cursor: pointer; text-decoration: none;"
						   onmouseover="this.style.textDecoration='underline';"
						   onmouseout="this.style.textDecoration='none';">
							<MudText Typo="Typo.h6" Style="color: #2e292a; padding-left: 8px; font-size: 13px; font-weight: 800">
								@group.Name
							</MudText>
						</a>
						<MudText Typo="Typo.h6" Style="color: #47393c; padding-left: 8px; font-size: 12px;  overflow:hidden;text-overflow: ellipsis; white-space: nowrap;">@group.Description</MudText>
						<MudText Typo="Typo.h6" Style="color: #816d71; padding-left: 8px; font-size: 12px; overflow:hidden;text-overflow: ellipsis;">
							@group.MemberCount thành viên
						</MudText>
					</MudItem>
				</div>
			</MudItem>
		}
	}
</MudGrid>

@code {
	List<GroupDTO>? listGroup;
	protected override async Task OnInitializedAsync()
	{
		await GetAllGroups();
	}

	private async Task GetAllGroups()
	{
		var httpClient = HttpClientFactory.CreateClient("MyHttpClient");
		var response = await httpClient.GetAsync("api/group/get-all-memberCount-group");
		if (response.IsSuccessStatusCode)
		{
			listGroup = await response.Content.ReadFromJsonAsync<List<GroupDTO>>();
		}
		else
		{
			var errorContent = await response.Content.ReadAsStringAsync();
			Console.WriteLine($"Có lỗi xảy ra: {errorContent}");
		}
	}

}
