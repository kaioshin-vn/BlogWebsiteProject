@implements IDisposable

@inject NavigationManager NavigationManager

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<MudNavMenu Color="Color.Success" Style="width:110px;">
    <MudNavLink Match="NavLinkMatch.Prefix" Href="/Error" Class="rounded-3 overflow-hidden m-3">
        <MudIcon Icon="@Icons.Material.Filled.AutoStories"></MudIcon>
        <MudText>Blog</MudText>
    </MudNavLink>

    <MudNavLink Match="NavLinkMatch.Prefix" Href="/weather" Class="rounded-3 overflow-hidden m-3">
        <MudIcon Icon="@Icons.Material.Filled.Architecture"></MudIcon>
        <MudText>Quiz</MudText>
    </MudNavLink>

    <MudNavLink Match="NavLinkMatch.Prefix" Href="/counter" Class="rounded-3 overflow-hidden m-3">
        <MudIcon Icon="@Icons.Material.Filled.AutoFixHigh"></MudIcon>
        <MudText>Dịch vụ</MudText>
    </MudNavLink>

    <MudNavLink Match="NavLinkMatch.Prefix" Href="/download-excel" Class="rounded-3 overflow-hidden m-3">
        <MudIcon Icon="@Icons.Material.Filled.AutoFixHigh"></MudIcon>
        <MudText>Download Excel</MudText>
    </MudNavLink>

    
</MudNavMenu>

@*
<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div> *@

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

@code {
    public bool ToolbarCheckBox { get; set; } = false;
    string _selectedFolder = "Inbox";

    private void ItemUpdated(MudItemDropInfo<DropItem> dropItem)
    {
        dropItem.Item.Identifier = dropItem.DropzoneIdentifier;

    }

    private List<DropItem> _items = new()
    {
        new DropItem(){ Name = "Your exchange rate and Klarna benefits here", Identifier = "Inbox" },
        new DropItem(){ Name = "IKEA - Betalningsbekräftelse för din order", Identifier = "Inbox" },
        new DropItem(){ Name = "Leverans beställd till dig​", Identifier = "Inbox" },
        new DropItem(){ Name = "You’ve Got Sales! Cotton Bureau On Demand Report for Thursday, February 24, 2022", Identifier = "Inbox" },
        new DropItem(){ Name = "Answer: Offer to buy mudblazor", Identifier = "Drafts" },
        new DropItem(){ Name = "Inloggningsvarning för Facebook Messenger for Android", Identifier = "Social" },
        new DropItem(){ Name = "Nya privata meddelanden på SweClockers", Identifier = "Forums" },
    };

    public class DropItem
    {
        public string Name { get; init; }
        public string Identifier { get; set; }
    }
}

