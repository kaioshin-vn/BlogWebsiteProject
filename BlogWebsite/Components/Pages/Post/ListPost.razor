@page "/listPost"
@using ASM_PH35423.StaticClass
@using Client.Components.ComponentCustom
@using Data.DTO.EntitiDTO
@using System.Net.Http.Headers
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Radzen
@using Radzen.Blazor

@inject IJSRuntime JSRunTime
@inject IHttpClientFactory HttpClientFactory
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject UserManager<ApplicationUser> UserManager
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject IWebHostEnvironment env

@if (listIntroPost == null)
{
    <Loading></Loading>
}
else
{
    <style>
        html {
            scroll-behavior: auto !important;
        }
    </style>

    <div>
        <div class="mt-3 ms-4" style="width:70%; display: @(PostDetail == null?"block":"none");">
            @foreach (var item in listIntroPost)
            {
                <PostIntro Avatar="@item.Avatar" Content="@item.Content"
                           CreateDate="@item.CreateDate" IdPost="@item.Id"
                           CommentCount="@item.CommentCount" Like="@item.Like"
                           VideoFile="@item.VideoFile" ImgFile="@item.ImgFile"
                           UserName="@item.UserName" TagNames="@item.ListTag"
                           Title="@item.Title" WatchDetailPost="DetailPost">
                </PostIntro>
            }
        </div>
    </div>

    @if (PostDetail != null)
    {
        <div>
            <div class="mt-3 ms-4" style="width:70%;">
                <PostDetail Avatar="@PostDetail.Avatar" Content="@PostDetail.Content"
                            CreateDate="@PostDetail.CreateDate" IdPost="@PostDetail.Id"
                            CommentCount="@PostDetail.CommentCount" Like="@PostDetail.Like"
                            VideoFile="@PostDetail.VideoFile" ImgFile="@PostDetail.ImgFile"
                            UserName="@PostDetail.UserName" TagNames="@PostDetail.ListTag"
                            Title="@PostDetail.Title" GoBack="GoBack">
                </PostDetail>
            </div>
        </div>
    }
}


@code {
    List<PostIntroDTO> listIntroPost;

    PostIntroDTO? PostDetail = null;
    private double ScrollPosition = 0;

    protected override async Task OnInitializedAsync()
    {
        var _httpClient = HttpClientFactory.CreateClient("MyHttpClient");

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var idUserCurrent = UserManager.GetUserId(user);
        var idUser = Guid.Parse(idUserCurrent);

        var result = await _httpClient.GetStringAsync($"/GetListPostIntro/{idUser}");

        var resultConverted = JsonConvert.DeserializeObject<List<PostIntroDTO>>(result);
        if (resultConverted != null)
        {
            listIntroPost = resultConverted;
        }
    }

    protected override async void OnAfterRender(bool firstRender)
    {
        if (!firstRender && ScrollPosition > 0 && PostDetail == null)
        {
            await JSRunTime.InvokeVoidAsync("restoreScrollPosition", ScrollPosition);
        }
    }

    async Task DetailPost(Guid idPost)
    {
        ScrollPosition = await JSRunTime.InvokeAsync<double>("saveScrollPosition");

        PostDetail = listIntroPost.FirstOrDefault(a => a.Id == idPost);
        StateHasChanged();
        await JSRunTime.InvokeVoidAsync("restoreScrollPosition", 0);
    }
    async Task GoBack()
    {
        PostDetail = null;
    }
}
